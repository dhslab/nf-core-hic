/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: samplesheet_check {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: combine_lanes {
        publishDir = [
            enabled: false
        ]
    }

        withName: fastq2pairs {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/fastq2pairs/${meta.library}" },
            pattern:  "*.{fastp.,pairs.,dedup.stats.txt}*",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


        withName: sort_bam {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/fastq2pairs/${meta.library}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


        withName: merge_crams {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/fastq2pairs/merged" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: merge_pairs {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/fastq2pairs/merged" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: pairs2mcool {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/mcool" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: capture_qc {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/capture_qc/${meta.library}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: make_chicago {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/chicago_bam/${meta.library}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: library_complexity {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample}/library_complexity/${meta.library}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

        withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: 'software_versions.yml'
        ]
    }

}